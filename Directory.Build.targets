<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <!--
    For non-SDK projects that import this file and then import Microsoft.Common.targets,
    tell Microsoft.Common.targets not to import Directory.Build.targets again
    -->
    <ImportDirectoryBuildTargets>false</ImportDirectoryBuildTargets>
  </PropertyGroup>

  <Import Project="Sdk.targets" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <PropertyGroup>
    <!--
    Hack workaround to skip the GenerateCompiledExpressionsTempFile target in
    Microsoft.WorkflowBuildExtensions.targets target that always runs in VS
    -->
    <GenerateCompiledExpressionsTempFilePathForEditing></GenerateCompiledExpressionsTempFilePathForEditing>

    <!-- Pass RuntimeMetadataVersion to the compiler for all Core Assemblies -->
    <RuntimeMetadataVersion Condition="'$(IsCoreAssembly)' == 'true'">v4.0.30319</RuntimeMetadataVersion>

    <CLSCompliant Condition="'$(CLSCompliant)'==''">true</CLSCompliant>
  </PropertyGroup>
  
  <!--
  Hack workaround for not restoring each project. Instead, we turn off all the targets
  that require a `project.assets.json`, since ours will be empty anyway.
  -->
  <Target Name="_ClearResolvePackageAssets"
          BeforeTargets="AssignProjectConfiguration"
          Condition="'$(MSBuildProjectExtension)' != '.depproj'">
     <PropertyGroup>
      <ResolvePackageDependenciesForBuildDependsOn></ResolvePackageDependenciesForBuildDependsOn>
    </PropertyGroup>
  </Target>

  <!--
  Hack workaround for .depproj's built with TargetFramework=net47
  This causes us to unnecessarily attempt to restore framework assemblies from the project directory
  This target clears out those assemblies from the list of assets to resolve -->
  <Target Name="_ClearResolvedFrameworkAssemblies"
          AfterTargets="ResolvePackageAssets"
          Condition="'$(MSBuildProjectExtension)' == '.depproj'">
    <ItemGroup>
      <ResolvedFrameworkAssemblies Remove="@(ResolvedFrameworkAssemblies)" />
    </ItemGroup>
  </Target>

  <Import Project="$(RepositoryEngineeringDir)versioning.targets" />

  <Import Project="$(RepositoryEngineeringDir)CodeAnalysis.targets" />

  <Import Project="$(RepositoryEngineeringDir)depProj.targets" Condition="'$(MSBuildProjectExtension)' == '.depproj'" />

  <Import Project="$(ToolSetCommonDirectory)Tools.proj.nuget.g.targets" Condition="Exists('$(ToolSetCommonDirectory)Tools.proj.nuget.g.targets')" />

  <!-- Define this target to override the workaround in arcade as we don't need it for our pkgprojs -->
  <Target Name="InitializeStandardNuspecProperties" />
</Project>
